import { Directive, HostListener, ElementRef, Renderer } from '@angular/core';
import { NglDropdown } from './dropdown';
export var NglDropdownTrigger = (function () {
    function NglDropdownTrigger(element, renderer, dropdown) {
        this.element = element;
        this.renderer = renderer;
        this.dropdown = dropdown;
        this.parentFocusEventSubscription = this.dropdown.triggerFocusEventEmitter.subscribe(this.focus.bind(this));
    }
    NglDropdownTrigger.prototype.ngOnDestroy = function () {
        this.parentFocusEventSubscription.unsubscribe();
    };
    NglDropdownTrigger.prototype.toggleOpen = function () {
        this.dropdown.toggle();
    };
    NglDropdownTrigger.prototype.onKeyDownOpen = function ($event) {
        $event.preventDefault();
        this.dropdown.toggle(true);
    };
    NglDropdownTrigger.prototype.focus = function () {
        this.renderer.invokeElementMethod(this.element.nativeElement, 'focus', []);
    };
    NglDropdownTrigger.decorators = [
        { type: Directive, args: [{
                    selector: '[nglDropdownTrigger]',
                    host: {
                        'aria-haspopup': 'true',
                    },
                },] },
    ];
    /** @nocollapse */
    NglDropdownTrigger.ctorParameters = function () { return [
        { type: ElementRef, },
        { type: Renderer, },
        { type: NglDropdown, },
    ]; };
    NglDropdownTrigger.propDecorators = {
        'toggleOpen': [{ type: HostListener, args: ['click',] },],
        'onKeyDownOpen': [{ type: HostListener, args: ['keydown.arrowdown', ['$event'],] },],
    };
    return NglDropdownTrigger;
}());
//# sourceMappingURL=dropdown-trigger.js.map