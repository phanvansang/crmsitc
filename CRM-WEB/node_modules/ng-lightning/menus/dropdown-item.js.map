{"version":3,"file":"dropdown-item.js","sourceRoot":"","sources":["../../../temp/inline/menus/dropdown-item.ts"],"names":[],"mappings":"OAAO,EAAC,SAAS,EAAE,UAAU,EAAE,QAAQ,EAAE,YAAY,EAAC,MAAM,eAAe;AAG3E;IAUE,yBAAoB,OAAmB,EAAU,QAAkB;QAA/C,YAAO,GAAP,OAAO,CAAY;QAAU,aAAQ,GAAR,QAAQ,CAAU;QAT3D,cAAS,GAAG,KAAK,CAAC;IAS4C,CAAC;IAPtE,iCAAO,GAAP;QACC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IACxB,CAAC;IACA,gCAAM,GAAN;QACC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IACzB,CAAC;IAID,kCAAQ,GAAR;QACE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IAED,+BAAK,GAAL;QACE,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC;IAC7E,CAAC;IACI,0BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,mBAAmB;oBAC7B,IAAI,EAAE;wBACJ,UAAU,EAAE,GAAG;qBAChB;iBACF,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,8BAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,UAAU,GAAG;QACpB,EAAC,IAAI,EAAE,QAAQ,GAAG;KACjB,EAH6F,CAG7F,CAAC;IACK,8BAAc,GAA2C;QAChE,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,OAAO,EAAG,EAAE,EAAE;QACvD,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,MAAM,EAAG,EAAE,EAAE;KACpD,CAAC;IACF,sBAAC;AAAD,CAAC,AApCD,IAoCC","sourcesContent":["import {Directive, ElementRef, Renderer, HostListener} from '@angular/core';\n\n\nexport class NglDropdownItem {\n  private isFocused = false;\n\n   onFocus() {\n    this.isFocused = true;\n  }\n   onBlur() {\n    this.isFocused = false;\n  }\n\n  constructor(private element: ElementRef, private renderer: Renderer) {}\n\n  hasFocus() {\n    return this.isFocused;\n  }\n\n  focus() {\n    this.renderer.invokeElementMethod(this.element.nativeElement, 'focus', []);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[nglDropdownItem]',\n  host: {\n    'tabindex': '0',\n  },\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'onFocus': [{ type: HostListener, args: ['focus', ] },],\n'onBlur': [{ type: HostListener, args: ['blur', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}