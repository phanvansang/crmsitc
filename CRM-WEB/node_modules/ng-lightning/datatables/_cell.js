import { Component, ChangeDetectionStrategy, Input, HostBinding } from '@angular/core';
export var NglInternalDatatableCell = (function () {
    function NglInternalDatatableCell() {
    }
    Object.defineProperty(NglInternalDatatableCell.prototype, "dataLabel", {
        get: function () {
            return this.column.heading;
        },
        enumerable: true,
        configurable: true
    });
    NglInternalDatatableCell.prototype.ngOnChanges = function (changes) {
        this.context = {
            $implicit: this.value,
            row: this.row,
            index: this.index,
        };
    };
    Object.defineProperty(NglInternalDatatableCell.prototype, "value", {
        get: function () {
            var key = this.column.key;
            return key ? this.row[key] : null;
        },
        enumerable: true,
        configurable: true
    });
    NglInternalDatatableCell.decorators = [
        { type: Component, args: [{
                    selector: 'td[ngl-internal-datatatable-cell]',
                    template: "\n    <template *ngIf=\"column.cellTpl\" [ngTemplateOutlet]=\"column.cellTpl.templateRef\" [ngOutletContext]=\"context\"></template><span *ngIf=\"!column.cellTpl\">{{ value }}</span>\n  ",
                    changeDetection: ChangeDetectionStrategy.OnPush,
                },] },
    ];
    /** @nocollapse */
    NglInternalDatatableCell.ctorParameters = function () { return []; };
    NglInternalDatatableCell.propDecorators = {
        'row': [{ type: Input },],
        'column': [{ type: Input },],
        'index': [{ type: Input },],
        'dataLabel': [{ type: HostBinding, args: ['attr.data-label',] },],
    };
    return NglInternalDatatableCell;
}());
//# sourceMappingURL=_cell.js.map