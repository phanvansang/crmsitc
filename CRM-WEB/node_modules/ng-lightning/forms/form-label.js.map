{"version":3,"file":"form-label.js","sourceRoot":"","sources":["../../../temp/inline/forms/form-label.ts"],"names":[],"mappings":"OAAO,EAAC,SAAS,EAAE,WAAW,EAAC,MAAM,eAAe;AAGpD;IACE,8BAAmB,WAA6B;QAA7B,gBAAW,GAAX,WAAW,CAAkB;IAAG,CAAC;IAC/C,+BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,EAAC,QAAQ,EAAE,wBAAwB,EAAC,EAAG,EAAE;KAClE,CAAC;IACF,kBAAkB;IACX,mCAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,WAAW,GAAG;KACpB,EAF6F,CAE7F,CAAC;IACF,2BAAC;AAAD,CAAC,AATD,IASC;AAED,6BAA6B,KAAa,EAAE,aAAmC;IAC7E,EAAE,CAAC,CAAC,KAAK,CAAC;QAAC,MAAM,CAAC,KAAK,CAAC;IACxB,MAAM,CAAC,aAAa,GAAG,aAAa,CAAC,WAAW,GAAG,EAAE,CAAC;AACxD,CAAC","sourcesContent":["import {Directive, TemplateRef} from '@angular/core';\n\n\nexport class NglFormLabelTemplate {\n  constructor(public templateRef: TemplateRef<any>) {}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: 'template[nglFormLabel]'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TemplateRef, },\n];\n}\n\nexport function getFormLabel(label: string, labelTemplate: NglFormLabelTemplate): string | TemplateRef<any> {\n  if (label) return label;\n  return labelTemplate ? labelTemplate.templateRef : '';\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}