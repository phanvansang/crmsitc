{"version":3,"file":"outlet.js","sourceRoot":"","sources":["../../../temp/inline/util/outlet.ts"],"names":[],"mappings":"OAAO,EAAC,SAAS,EAAE,KAAK,EAAE,WAAW,EAAY,MAAM,eAAe;AAGtE;IAAA;IAuBA,CAAC;IAjBC,uCAAW,GAAX,UAAY,OAAa;QACvB;;4CAEgF,EAF/E,oBAAY,EAAE,4BAAoB,CAE8C;;IACnF,CAAC;IACI,4BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,qBAAqB;oBAC/B,QAAQ,EAAE,yEAAuE;iBAClF,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,gCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACK,gCAAc,GAA2C;QAChE,mBAAmB,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;KACtC,CAAC;IACF,wBAAC;AAAD,CAAC,AAvBD,IAuBC","sourcesContent":["import {Component, Input, TemplateRef, OnChanges} from '@angular/core';\n\n\nexport class NglInternalOutlet implements OnChanges {\n   nglInternalOutlet: string | TemplateRef<any>;\n\n  content: string;\n  contentTemplate: TemplateRef<any>;\n\n  ngOnChanges(changes?: any) {\n    [this.content, this.contentTemplate] = this.nglInternalOutlet instanceof TemplateRef\n                                            ? ['', <TemplateRef<any>>this.nglInternalOutlet]\n                                            : [<string>this.nglInternalOutlet, null];\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: '[nglInternalOutlet]',\n  template: `{{content}}<template [ngTemplateOutlet]=\"contentTemplate\"></template>`,\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'nglInternalOutlet': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}