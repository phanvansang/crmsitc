import { Directive, Input, ElementRef, Renderer } from '@angular/core';
import { replaceClass } from '../util/util';
export var NglButton = (function () {
    function NglButton(element, renderer) {
        this.element = element;
        this.renderer = renderer;
        this.prefix = "slds-button--";
        this.renderer.setElementClass(this.element.nativeElement, 'slds-button', true);
    }
    Object.defineProperty(NglButton.prototype, "nglButton", {
        set: function (type) {
            replaceClass(this, "" + this.prefix + this._type, type ? "" + this.prefix + type : '');
            this._type = type;
        },
        enumerable: true,
        configurable: true
    });
    NglButton.decorators = [
        { type: Directive, args: [{
                    selector: '[nglButton]',
                },] },
    ];
    /** @nocollapse */
    NglButton.ctorParameters = function () { return [
        { type: ElementRef, },
        { type: Renderer, },
    ]; };
    NglButton.propDecorators = {
        'nglButton': [{ type: Input },],
    };
    return NglButton;
}());
;
//# sourceMappingURL=button.js.map